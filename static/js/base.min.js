
function toggleNavItems(link) {
	link && link.forEach( (e) => {
		if (window.innerWidth < 992) {
			( e.classList.contains('dropdown-toggle')) && e.classList.remove('hidden');
			(!e.classList.contains('dropdown-toggle')) && e.classList.add('hidden');
		} else {
			( e.classList.contains('dropdown-toggle')) && e.classList.add('hidden');
			(!e.classList.contains('dropdown-toggle')) && e.classList.remove('hidden');
		}
	});
}

function navbarOffset(elem) {
	// Добавим смещение следущему после меню элементу
	if (!elem.classList.contains('expanded')) {
		var siblingEl = elem.nextElementSibling;
		siblingEl.style.marginTop = elem.clientHeight + 'px';
	}
}

document.addEventListener("DOMContentLoaded", function() {
	const burger = document.querySelector('.navbar-toggler');
	const navbar = document.querySelector('nav.navbar');

	navbarOffset(navbar);

	const images = document.querySelectorAll("img:not(.lazyload)");
	images.forEach(img => {
		if ('loading' in HTMLImageElement.prototype)
			img.setAttribute('loading','lazy');
		else
			img.classList.add('lazyload');
	});

	const exhibitionsLink = document.querySelectorAll('.exh-nav-item .nav-link');
	(window.innerWidth >= 992) && toggleNavItems(exhibitionsLink);

	window.addEventListener('resize', function(){
		navbarOffset(navbar);
		toggleNavItems(exhibitionsLink);
		if (window.innerWidth >= 992) {
			burger.classList.contains('collapsed') && burger.classList.remove('collapsed');
			burger.nextElementSibling.style.maxHeight = '';
		}

	});

	loadingElements = document.body.querySelectorAll('.loading');
	loadingElements.forEach( function(item) {
		item.classList.remove('loading');
		item.classList.add('loaded');
	});

	//обработаем нажатие на '+/-' у заголовка групп фильтрации checkbox для размертывания/свертывания
	const collapsedBlock = document.querySelectorAll('.collapsed')
	collapsedBlock.forEach( (item) => {
		item.addEventListener('click', (e) => {
/*			for (let sibling of e.target.siblingNode) {
				sibling.classList.remove('collapsed');
				sibling.classList.remove('collapsed');
			}*/
			if (e.currentTarget.classList.contains('collapsed')) {
				e.currentTarget.classList.remove('collapsed');
				e.currentTarget.classList.add('expanded');
			} else
			if (e.currentTarget.classList.contains('expanded')) {
				e.currentTarget.classList.remove('expanded');
				e.currentTarget.classList.add('collapsed');
			}
		}, {passive: true});
	});

	// обработчик раскрытия всего содержимого при нажатии на кнопку "Читать далее" при наличии блока описания
	const excerptBlock = document.querySelector('.description');
	if (excerptBlock) {
		var excerptBlock_h = excerptBlock.scrollHeight;
		if (excerptBlock_h/300 > 1.2) {
			//excerptBlock.style.height = (excerptBlock_h+30) + 'px';
			let div = document.createElement('a');
			div.className = "read-more-link";
			//div.innerHTML = "Read more";
			excerptBlock.append(div);
			excerptBlock.classList.add('brief');
		}

		excerptBlock.lastElementChild && excerptBlock.lastElementChild.addEventListener('click', (e) => {
			//var parentBlock = e.target.parentNode;
			excerptBlock.classList.toggle('brief');
			excerptBlock_h = excerptBlock.scrollHeight + 30;
			excerptBlock.style.height = ((excerptBlock.classList.contains('brief')) ? 300 : excerptBlock_h) + 'px';
		});

	}

	// Сворачивание мобильного меню по нажатию вне области его контейнера
	burger.addEventListener('click', function (e) {
		const container = document.querySelector('.container');
		var navbarNavDropdown =  document.querySelector('.navbar-collapse');

		if (container && (this.getAttribute('aria-expanded') == "true" || this.ariaExpanded == "true")) {
			this.parentNode.parentNode.classList.add('expanded');
			navbarNavDropdown.style.maxHeight = navbarNavDropdown.scrollHeight + 'px';
			container.addEventListener('click', containerListener, false);
		}
		if (container && (this.getAttribute('aria-expanded') == "false" || this.ariaExpanded == "false")) {
			this.parentNode.parentNode.classList.remove('expanded');
			navbarNavDropdown.style.maxHeight = 0;
			container.removeEventListener('click', containerListener, false);
		}
	}, {passive: true});

	var containerListener = function(e) {
		burger.click();
	}

	const searchLink = document.querySelectorAll('.nav-search-link');
	const searchContainer = document.querySelector('#searchContainer');
	searchLink.forEach( (item) => {
		item.addEventListener('click', (e) => {
			searchContainer.classList.toggle('active');
		}, {passive: true});
	});


	document.onkeydown = function(e) { // закрытие окна поиска по клавише escape
		e = e || window.event;
		(e.keyCode == 27) && searchContainer.classList.remove('active');
	};

	document.onscroll = function(e) { // закрытие окна поиска по скролу
		searchContainer.classList.contains('active') && searchContainer.classList.remove('active');
	};

	
	//var csrftoken =document.getElementsByName('csrfmiddlewaretoken')[0].value;
	
	function ajaxSend(url, params='', method='post', renderFunc=render) {
		// Отправляем запрос
		fetch(`${url}?${params}`, {
			method: method,
			headers: {
				'X-Requested-With': 'XMLHttpRequest', // it's nesessary for correct checking request.is_ajax() on server
				'Content-Type': 'application/x-www-form-urlencoded',
				//'X-CSRFToken': csrftoken,
			},
		})
		.then(response => response.json())
		.then(json => renderFunc(json))
		.catch(function(error){
			var message =  '<h3>Ошибка!</h3><p>Что-то пошло не так...</p>';
			alertHandler(message);
		})
	}
	
	
	// Обработчик закрытия окон с сообщениями
	alertHandler = function(html){
		if (alertContainer) {
			var alertNode = alertContainer.querySelector('.alert');
			if (alertNode) {
				var body = alertNode.querySelector('.alert-body');
				body.innerHTML = html;
			} else {
				alertNode = document.createElement('div');
				alertNode.className = 'alert alert-secondary fade show';
				alertNode.setAttribute('role','alert');
				alertNode.innerHTML =  '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\
										<div class="alert-body blockquote">'+html+'</div>';
				alertContainer.append(alertNode);
	
				var alert = new bootstrap.Alert(alertNode);
				var closeBtn = alertNode.querySelector('.btn-close');
				closeBtn && closeBtn.addEventListener('click', function () {
					window.removeEventListener('keydown', (e)=>{});
					alert.close();
				});
				alert && window.addEventListener('keydown', (e)=>{
					(e.keyCode == 27) && alert.close();
				});
				alertNode.addEventListener('closed.bs.alert', function () {
					alertContainer.classList.add('hidden');
				});
			}
			alertContainer.classList.remove('hidden');
		}
	}
	
		// Событие нажатия на кнопку фильтрации
		const filterForm = document.querySelector('form[name=projects-filter]');
	
		if (filterForm) {
			const filterCheckboxes = filterForm.querySelectorAll('input[type=checkbox]');
			const filterLink = document.querySelector('.filter-link');
			const sidebar = document.querySelector('#sidebar');
			const closeBtn = sidebar.querySelector('.sidebar-close');
			const submitBtn = filterForm.querySelector('[type=submit]');
	
	
			closeBtn.addEventListener('click', closeSidebar, {passive: true});
			filterLink.addEventListener('click', function (e) {
				e.preventDefault();
				sidebar.style.top = navbar.clientHeight + 'px';
				sidebar.classList.toggle('active');
				alertContainer.classList.remove('hidden');
				alertContainer.addEventListener('click', closeSidebar, {passive: true});
				window.addEventListener('keydown', (e)=>{
					(e.keyCode == 27) && closeSidebar();
				});
			}, {passive: true});
	
			function closeSidebar() {
				sidebar.classList.remove('active');
				alertContainer.classList.add('hidden');
				alertContainer.removeEventListener('click', closeSidebar);
				window.removeEventListener('keydown', (e)=>{});
			}
	
	
			const projectsRender = function(data){
				var projectsGrid = document.querySelector('.projects-list');
				var projects_list = data['projects_list'];
				var html = '';
				for (var i in projects_list) {
	
					var id = projects_list[i]['id'],
						title = projects_list[i]['title'],
						fullimage = data['media_url']+projects_list[i]['cover'],
						thumb_xs = data['media_url']+projects_list[i]['thumb_xs'],
						thumb_sm = data['media_url']+projects_list[i]['thumb_sm'],
						thumb_xs_w = projects_list[i]['thumb_xs_w'],
						thumb_sm_w = projects_list[i]['thumb_sm_w'],
						author = projects_list[i]['owner__name'],
						score = (projects_list[i]['average']) ? projects_list[i]['average'].toFixed(1) : null,
						url = data['projects_url']+projects_list[i]['owner__slug']+'/project-'+projects_list[i]['project_id']+'/';
	
					html +='<a id="project-'+id+'" class="grid-cell" href="'+url+'" title="'+title+'">\
							<figure>\
								<img class="project-cover lazyload"\
									data-src="'+fullimage+'"\
									data-srcset="'+thumb_xs+' ' + thumb_xs_w+'w '+ thumb_sm+' '+thumb_sm_w + 'w"\
									data-sizes="auto"\
									loading="lazy"\
									title="'+title+'"\
									alt="'+(title ? title+'. ' : '')+'Автор проекта: '+author+'">\
								<figcaption class="img-title centered">\
									<h2 class="project-title">'+title+'</h2>'+
									(author ? '<div class="subtitle">'+author+'</div>' : '')+
									(score ?
									'<div class="portfolio-rate centered">\
										<span class="rate-counter">'+score+'</span>\
										<svg class="rate-star"><use xlink:href="#star-icon"></use></svg>\
									</div>' : '')+
								'</figcaption>\
							</figure>\
						</a>';
				}
	
				projectsGrid.innerHTML = html;
				(async () => {
					if ('loading' in HTMLImageElement.prototype) {
						const images = document.querySelectorAll("img.lazyload");
						images.forEach(img => {
							if (img.dataset.src) {
								img.src = img.dataset.src;
								img.srcset = img.dataset.srcset;
							}
							img.classList.add('lazyloaded');
							img.classList.remove('lazyload');
						});
	
					} else {
						lazySizes.init();
					}
				})();
			}
	
			function submitFilter(el) {
				let url = el.action;
				let method = el.method;
				let params = new URLSearchParams(new FormData(el)).toString();
				if (params == '') {
					submitBtn.disabled = true;
					params = 'filter-group=0';
					el.setAttribute('value', 0);
					//el.querySelector('[type=submit]').disabled = true;
				} else{
					submitBtn.disabled = false;
				}
				ajaxSend(url, params, method, projectsRender);
				//closeSidebar();
			}
	
			if (filterCheckboxes.length > 0) {
	
				filterCheckboxes.forEach( (checkbox) => {
					if (checkbox.checked) submitBtn.disabled = false;
					checkbox.addEventListener('change',(e)=>{
						 submitFilter(filterForm);
					});
				});
	
			}
	
			filterForm.addEventListener('submit', function (e) {
				e.preventDefault();
				let i = filterCheckboxes.length-1;
				for(;i>=0;i--){
					filterCheckboxes[i]['checked'] = false;
				}
				submitFilter(this);
			});
	
		}

/*
	filterItems.on('click', '.filter__title', function(e) {
		if ( $(this).hasClass(collapsed) || $(this).hasClass(expanded) ) {
			$(this).toggleClass(collapsed).toggleClass(expanded);
			$(this).parent().siblings('.filter__inner').slideToggle(300);
		}
	});
*/

});