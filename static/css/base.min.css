h1 {
  margin: 1em 0 0.5em;
}

a {
  color: darkblue;
  text-decoration: none;
  outline: none;
}

a.active {
  font-weight: bold;
}

svg.icon {
  width: 30px;
  height: 30px;
}

#brand-logo img {
  width: auto;
  max-height: 100px;
}

.avatar img {
  max-width: 450px;
}

nav li.nav-item a {
  position: relative;
}

nav li.nav-item a::before {
  content: '';
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  left: 3px;
  top: 50%;
  width: 3px;
  height: 0;
  background-color: transparent;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: all 150ms ease-out;
  -o-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

nav li.nav-item a:hover::before {
  background-color: blue;
  height: 1em;
}

.exhibition .content > div {
  margin-bottom: 2em;
}

@media (min-width: 576px) {
  .container {
    --bs-gutter-x: 0em;
  }

  .nav-pills li.nav-item {
    display: table;
    width: 80px;
    text-align: center;
  }
}

@media (max-width: 991.98px) {
  nav .nav-item {
    width: 100%;
  }

  nav .nav-item .nav-link {
    padding-left: 0.5em !important;
    padding-right: 0.5em !important;
  }

  nav .dropdown-menu li {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (max-width: 575.98px) {
  .sidebar li:first-child {
    width: 100%;
    text-align: center;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
